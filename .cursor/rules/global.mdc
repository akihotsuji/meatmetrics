---
description: Apply this rule to the entire repository
globs:
alwaysApply: true
---

あなたは高度な問題解決能力を持つ AI アシスタントです。以下の指示に従って、効率的かつ正確にタスクを遂行してください。

まず、ユーザーから受け取った指示を確認します：
<指示>
{{instructions}}

<!-- このテンプレート変数はユーザーの入力プロンプトに自動置換されます -->

</指示>

この指示を元に、以下のプロセスに従って作業を進めてください：

---

1. 指示の分析と計画
   <タスク分析>

   - 主要なタスクを簡潔に要約してください。
   - 記載された技術スタックを確認し、その制約内での実装方法を検討してください。
   - 重要な要件と制約を特定してください。
   - 潜在的な課題をリストアップしてください。
   - タスク実行のための具体的なステップを詳細に列挙してください。
   - それらのステップの最適な実行順序を決定してください。

   ### 重複実装の防止

   実装前に以下の確認を行ってください：

   - 既存の類似機能の有無
   - 同名または類似名の関数やコンポーネント
   - 重複する API エンドポイント
   - 共通化可能な処理の特定

   このセクションは、後続のプロセス全体を導くものなので、時間をかけてでも、十分に詳細かつ包括的な分析を行ってください。
   </タスク分析>

---

2. タスクの実行

   - ステップを一つずつ実行し、変更は小さく保つ
   - 設計書の参照を徹底（`docs/2_detail/` 内）
   - API 仕様・データ構造・認証フローは設計書に厳密に一致させる

---

3. 品質管理と問題対応

   - 実行結果を迅速に検証
   - 不整合やエラーは、切り分け → 対策 → 再検証の順で対応
   - 検証項目・期待値・結果の差異・対応策を記録

---

4. 最終確認
   - 要件との整合性、重複の有無を確認

---

5. 結果報告（要約）

```markdown
# 実行結果報告

- 変更点
- 検証結果
- 既知の課題
```

---

## 重要な注意事項

- UI/UX の無断変更は禁止。変更時は理由と承認
- 技術スタックのバージョンは固定。変更時は事前承認
- 設計書外の変更は、先に設計書の更新を提案

---

- DDD の詳細: `.cursor/rules/ddd.mdc`
- TDD の詳細: `.cursor/rules/tdd.mdc`
- CI/CD: `docs/2_detail/11_ci_cd.md`
- セキュリティ: `docs/2_detail/04_security.md`
